{
  "version": 4,
  "terraform_version": "0.12.10",
  "serial": 512,
  "lineage": "5628f289-7aef-a873-9232-d851a5b21634",
  "outputs": {},
  "resources": [
    {
      "mode": "data",
      "type": "aws_glue_script",
      "name": "scala_script",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "dag_edge": [
              {
                "source": "datasourceDynamo",
                "target": "joindynamoands3",
                "target_parameter": "frame2"
              },
              {
                "source": "mappedsource",
                "target": "joindynamoands3",
                "target_parameter": "frame1"
              },
              {
                "source": "joindynamoands3",
                "target": "resolvechoice",
                "target_parameter": ""
              },
              {
                "source": "resolvechoice",
                "target": "datasink",
                "target_parameter": ""
              }
            ],
            "dag_node": [
              {
                "args": [
                  {
                    "name": "database",
                    "param": false,
                    "value": "\"glue_database\""
                  },
                  {
                    "name": "table_name",
                    "param": false,
                    "value": "\"testindex\""
                  }
                ],
                "id": "datasourceDynamo",
                "line_number": 0,
                "node_type": "DataSource"
              },
              {
                "args": [
                  {
                    "name": "database",
                    "param": false,
                    "value": "\"glue_database\""
                  },
                  {
                    "name": "table_name",
                    "param": false,
                    "value": "\"mapped_table\""
                  }
                ],
                "id": "mappedsource",
                "line_number": 0,
                "node_type": "DataSource"
              },
              {
                "args": [
                  {
                    "name": "frame1",
                    "param": false,
                    "value": "datasource0"
                  },
                  {
                    "name": "frame2",
                    "param": false,
                    "value": "datasource1"
                  },
                  {
                    "name": "keys1",
                    "param": false,
                    "value": "[\"id\", \"sum\"]"
                  },
                  {
                    "name": "keys2",
                    "param": false,
                    "value": "[\"id\", \"sum\"]"
                  }
                ],
                "id": "joindynamoands3",
                "line_number": 0,
                "node_type": "Join"
              },
              {
                "args": [
                  {
                    "name": "choice",
                    "param": false,
                    "value": "\"MATCH_CATALOG\""
                  },
                  {
                    "name": "database",
                    "param": false,
                    "value": "\"glue_database\""
                  },
                  {
                    "name": "table_name",
                    "param": false,
                    "value": "\"merged_table\""
                  }
                ],
                "id": "resolvechoice",
                "line_number": 0,
                "node_type": "ResolveChoice"
              },
              {
                "args": [
                  {
                    "name": "database",
                    "param": false,
                    "value": "\"glue_database\""
                  },
                  {
                    "name": "table_name",
                    "param": false,
                    "value": "\"merged_table\""
                  }
                ],
                "id": "datasink",
                "line_number": 0,
                "node_type": "DataSink"
              }
            ],
            "id": "2019-11-27 01:04:01.13330055 +0000 UTC",
            "language": "SCALA",
            "python_script": "",
            "scala_code": "import com.amazonaws.services.glue.ChoiceOption\nimport com.amazonaws.services.glue.GlueContext\nimport com.amazonaws.services.glue.ResolveSpec\nimport com.amazonaws.services.glue.errors.CallSite\nimport com.amazonaws.services.glue.util.GlueArgParser\nimport com.amazonaws.services.glue.util.Job\nimport com.amazonaws.services.glue.util.JsonOptions\nimport org.apache.spark.SparkContext\nimport scala.collection.JavaConverters._\n\nobject GlueApp {\n  def main(sysArgs: Array[String]) {\n    val spark: SparkContext = new SparkContext()\n    val glueContext: GlueContext = new GlueContext(spark)\n    // @params: [JOB_NAME]\n    val args = GlueArgParser.getResolvedOptions(sysArgs, Seq(\"JOB_NAME\").toArray)\n    Job.init(args(\"JOB_NAME\"), glueContext, args.asJava)\n    // @type: DataSource\n    // @args: [database = \"glue_database\", table_name = \"mapped_table\", transformation_ctx = \"mappedsource\"]\n    // @return: mappedsource\n    // @inputs: []\n    val mappedsource = glueContext.getCatalogSource(database = \"glue_database\", tableName = \"mapped_table\", redshiftTmpDir = \"\", transformationContext = \"mappedsource\").getDynamicFrame()\n    // @type: DataSource\n    // @args: [database = \"glue_database\", table_name = \"testindex\", transformation_ctx = \"datasourceDynamo\"]\n    // @return: datasourceDynamo\n    // @inputs: []\n    val datasourceDynamo = glueContext.getCatalogSource(database = \"glue_database\", tableName = \"testindex\", redshiftTmpDir = \"\", transformationContext = \"datasourceDynamo\").getDynamicFrame()\n    // @type: Join\n    // @args: [frame1 = datasource0, frame2 = datasource1, keys2 = [\"id\", \"sum\"], keys1 = [\"id\", \"sum\"], transformation_ctx = \"joindynamoands3\"]\n    // @return: joindynamoands3\n    // @inputs: [frame1 = mappedsource, frame2 = datasourceDynamo]\n    val joindynamoands3 = mappedsource.join(keys1 = Seq(\"id\", \"sum\"), keys2 = Seq(\"id\", \"sum\"), frame2 = datasourceDynamo, transformationContext = \"joindynamoands3\")\n    // @type: ResolveChoice\n    // @args: [database = \"glue_database\", choice = \"MATCH_CATALOG\", table_name = \"merged_table\", transformation_ctx = \"resolvechoice\"]\n    // @return: resolvechoice\n    // @inputs: [frame = joindynamoands3]\n    val resolvechoice = joindynamoands3.resolveChoice(choiceOption = Some(ChoiceOption(\"MATCH_CATALOG\")), database = Some(\"glue_database\"), tableName = Some(\"merged_table\"), transformationContext = \"resolvechoice\")\n    // @type: DataSink\n    // @args: [database = \"glue_database\", table_name = \"merged_table\", transformation_ctx = \"datasink\"]\n    // @return: datasink\n    // @inputs: [frame = resolvechoice]\n    val datasink = glueContext.getCatalogSink(database = \"glue_database\", tableName = \"merged_table\", redshiftTmpDir = \"\", transformationContext = \"datasink\").writeDynamicFrame(resolvechoice)\n    Job.commit()\n  }\n}"
          },
          "depends_on": [
            "aws_dynamodb_table.test_avro_data_source_index",
            "aws_glue_catalog_database.aws_glue_catalog_database",
            "aws_glue_catalog_table.aws_glue_catalog_table_mapped",
            "aws_glue_catalog_table.aws_glue_catalog_table_merged"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_cloudformation_stack",
      "name": "glue_job_stack",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "capabilities": null,
            "disable_rollback": false,
            "iam_role_arn": "",
            "id": "arn:aws:cloudformation:us-east-1:061753407487:stack/glue-job-stack/dcd84e40-0ffc-11ea-9ed1-12217e59f19f",
            "name": "glue-job-stack",
            "notification_arns": null,
            "on_failure": null,
            "outputs": {},
            "parameters": {},
            "policy_body": null,
            "policy_url": null,
            "tags": {},
            "template_body": "{\"Resources\":{\"GlueJob\":{\"Properties\":{\"Command\":{\"Name\":\"glueetl\",\"ScriptLocation\":\"s3://shanesscala/transform.scala\"},\"DefaultArguments\":{\"--class\":\"GlueApp\",\"--job-language\":\"scala\"},\"Description\":\"Glue job\",\"GlueVersion\":\"1.0\",\"Name\":\"joinData\",\"Role\":\"arn:aws:iam::061753407487:role/Glue\"},\"Type\":\"AWS::Glue::Job\"},\"MapGlueJob\":{\"Properties\":{\"Command\":{\"Name\":\"glueetl\",\"ScriptLocation\":\"s3://shanesscalamap/map.scala\"},\"DefaultArguments\":{\"--class\":\"GlueApp\",\"--job-language\":\"scala\"},\"Description\":\"Glue job\",\"GlueVersion\":\"1.0\",\"Name\":\"mapData\",\"Role\":\"arn:aws:iam::061753407487:role/Glue\"},\"Type\":\"AWS::Glue::Job\"}}}",
            "template_url": null,
            "timeout_in_minutes": null,
            "timeouts": null
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxODAwMDAwMDAwMDAwLCJkZWxldGUiOjE4MDAwMDAwMDAwMDAsInVwZGF0ZSI6MTgwMDAwMDAwMDAwMH19",
          "depends_on": [
            "aws_s3_bucket.scala_dag",
            "aws_s3_bucket.scala_map",
            "aws_s3_bucket_object.file_upload",
            "aws_s3_bucket_object.file_upload_map"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_dynamodb_table",
      "name": "test_avro_data_source_index",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:dynamodb:us-east-1:061753407487:table/testindex",
            "attribute": [
              {
                "name": "id",
                "type": "S"
              }
            ],
            "billing_mode": "PROVISIONED",
            "global_secondary_index": [],
            "hash_key": "id",
            "id": "testindex",
            "local_secondary_index": [],
            "name": "testindex",
            "point_in_time_recovery": [
              {
                "enabled": false
              }
            ],
            "range_key": null,
            "read_capacity": 5,
            "server_side_encryption": [],
            "stream_arn": "",
            "stream_enabled": false,
            "stream_label": "",
            "stream_view_type": "",
            "tags": {},
            "timeouts": null,
            "ttl": [
              {
                "attribute_name": "",
                "enabled": false
              }
            ],
            "write_capacity": 5
          },
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6NjAwMDAwMDAwMDAwLCJ1cGRhdGUiOjM2MDAwMDAwMDAwMDB9LCJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_glue_catalog_database",
      "name": "aws_glue_catalog_database",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "catalog_id": "061753407487",
            "description": "",
            "id": "061753407487:glue_database",
            "location_uri": "",
            "name": "glue_database",
            "parameters": {}
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_glue_catalog_table",
      "name": "aws_glue_catalog_table_mapped",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "catalog_id": "061753407487",
            "database_name": "glue_database",
            "description": "table used to store the mapped data",
            "id": "061753407487:glue_database:mapped_table",
            "name": "mapped_table",
            "owner": "",
            "parameters": {
              "EXTERNAL": "TRUE",
              "classification": "parquet",
              "parquet.compression": "SNAPPY"
            },
            "partition_keys": [],
            "retention": 0,
            "storage_descriptor": [
              {
                "bucket_columns": [],
                "columns": [
                  {
                    "comment": "",
                    "name": "sum",
                    "type": "string"
                  },
                  {
                    "comment": "",
                    "name": "id",
                    "type": "string"
                  }
                ],
                "compressed": false,
                "input_format": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
                "location": "s3://shanesscala/mappedTable",
                "number_of_buckets": 0,
                "output_format": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
                "parameters": {},
                "ser_de_info": [
                  {
                    "name": "my-stream",
                    "parameters": {
                      "serialization.format": "1"
                    },
                    "serialization_library": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe"
                  }
                ],
                "skewed_info": [],
                "sort_columns": [],
                "stored_as_sub_directories": false
              }
            ],
            "table_type": "EXTERNAL_TABLE",
            "view_expanded_text": "",
            "view_original_text": ""
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_glue_catalog_database.aws_glue_catalog_database",
            "aws_s3_bucket.scala_dag"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_glue_catalog_table",
      "name": "aws_glue_catalog_table_merged",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "catalog_id": "061753407487",
            "database_name": "glue_database",
            "description": "table used to store the joined data",
            "id": "061753407487:glue_database:merged_table",
            "name": "merged_table",
            "owner": "",
            "parameters": {
              "EXTERNAL": "TRUE",
              "classification": "avro",
              "parquet.compression": "SNAPPY"
            },
            "partition_keys": [],
            "retention": 0,
            "storage_descriptor": [
              {
                "bucket_columns": [],
                "columns": [
                  {
                    "comment": "",
                    "name": "id",
                    "type": "string"
                  },
                  {
                    "comment": "",
                    "name": "sum",
                    "type": "string"
                  }
                ],
                "compressed": false,
                "input_format": "org.apache.hadoop.hive.ql.io.avro.AvroContainerInputFormat",
                "location": "s3://shanesscala/mergedTable",
                "number_of_buckets": 0,
                "output_format": "org.apache.hadoop.hive.ql.io.avro.AvroContainerOutputFormat",
                "parameters": {},
                "ser_de_info": [
                  {
                    "name": "merged",
                    "parameters": {
                      "serialization.format": "1"
                    },
                    "serialization_library": "org.apache.hadoop.hive.serde2.avro.AvroSerDe"
                  }
                ],
                "skewed_info": [],
                "sort_columns": [],
                "stored_as_sub_directories": false
              }
            ],
            "table_type": "EXTERNAL_TABLE",
            "view_expanded_text": "",
            "view_original_text": ""
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_glue_catalog_database.aws_glue_catalog_database",
            "aws_s3_bucket.scala_dag"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_glue_crawler",
      "name": "dynamo_crawler",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:glue:us-east-1:061753407487:crawler/CrawlerDynamo",
            "catalog_target": [],
            "classifiers": [],
            "configuration": "",
            "database_name": "glue_database",
            "description": "",
            "dynamodb_target": [
              {
                "path": "testindex"
              }
            ],
            "id": "CrawlerDynamo",
            "jdbc_target": [],
            "name": "CrawlerDynamo",
            "role": "Glue",
            "s3_target": [],
            "schedule": "cron(15 12 * * ? *)",
            "schema_change_policy": [
              {
                "delete_behavior": "DEPRECATE_IN_DATABASE",
                "update_behavior": "UPDATE_IN_DATABASE"
              }
            ],
            "security_configuration": "",
            "table_prefix": ""
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_dynamodb_table.test_avro_data_source_index",
            "aws_glue_catalog_database.aws_glue_catalog_database"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_glue_crawler",
      "name": "s3_crawler",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:glue:us-east-1:061753407487:crawler/s3Crawler",
            "catalog_target": [],
            "classifiers": [],
            "configuration": "",
            "database_name": "glue_database",
            "description": "",
            "dynamodb_target": [],
            "id": "s3Crawler",
            "jdbc_target": [],
            "name": "s3Crawler",
            "role": "Glue",
            "s3_target": [
              {
                "exclusions": [],
                "path": "s3://testavrodatasource"
              }
            ],
            "schedule": "",
            "schema_change_policy": [
              {
                "delete_behavior": "DEPRECATE_IN_DATABASE",
                "update_behavior": "UPDATE_IN_DATABASE"
              }
            ],
            "security_configuration": "",
            "table_prefix": ""
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_glue_catalog_database.aws_glue_catalog_database",
            "aws_s3_bucket.test_avro_data_source"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "atheneWorkspace",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": "public-read-write",
            "arn": "arn:aws:s3:::athene-workspace",
            "bucket": "athene-workspace",
            "bucket_domain_name": "athene-workspace.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "athene-workspace.s3.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "hosted_zone_id": "Z3AQBSTGFYJSTF",
            "id": "athene-workspace",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "policy": null,
            "region": "us-east-1",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": {},
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          }
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "scala_dag",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": "public-read-write",
            "arn": "arn:aws:s3:::shanesscala",
            "bucket": "shanesscala",
            "bucket_domain_name": "shanesscala.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "shanesscala.s3.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "hosted_zone_id": "Z3AQBSTGFYJSTF",
            "id": "shanesscala",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "policy": null,
            "region": "us-east-1",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": {},
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "scala_map",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": "public-read-write",
            "arn": "arn:aws:s3:::shanesscalamap",
            "bucket": "shanesscalamap",
            "bucket_domain_name": "shanesscalamap.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "shanesscalamap.s3.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "hosted_zone_id": "Z3AQBSTGFYJSTF",
            "id": "shanesscalamap",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "policy": null,
            "region": "us-east-1",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": {},
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_s3_bucket",
      "name": "test_avro_data_source",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acceleration_status": "",
            "acl": "public-read-write",
            "arn": "arn:aws:s3:::testavrodatasource",
            "bucket": "testavrodatasource",
            "bucket_domain_name": "testavrodatasource.s3.amazonaws.com",
            "bucket_prefix": null,
            "bucket_regional_domain_name": "testavrodatasource.s3.amazonaws.com",
            "cors_rule": [],
            "force_destroy": false,
            "hosted_zone_id": "Z3AQBSTGFYJSTF",
            "id": "testavrodatasource",
            "lifecycle_rule": [],
            "logging": [],
            "object_lock_configuration": [],
            "policy": null,
            "region": "us-east-1",
            "replication_configuration": [],
            "request_payer": "BucketOwner",
            "server_side_encryption_configuration": [],
            "tags": {},
            "versioning": [
              {
                "enabled": false,
                "mfa_delete": false
              }
            ],
            "website": [],
            "website_domain": null,
            "website_endpoint": null
          },
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_s3_bucket_object",
      "name": "file_upload",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acl": "private",
            "bucket": "shanesscala",
            "cache_control": "",
            "content": null,
            "content_base64": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/octet-stream",
            "etag": "4be2f4da9e90f39e8b78a9b7d664e169",
            "force_destroy": false,
            "id": "transform.scala",
            "key": "transform.scala",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "server_side_encryption": "",
            "source": "./scalaCode_gen.scala",
            "storage_class": "STANDARD",
            "tags": {},
            "version_id": "",
            "website_redirect": ""
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_s3_bucket.scala_dag",
            "local_file.scala_code"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_s3_bucket_object",
      "name": "file_upload_map",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acl": "private",
            "bucket": "shanesscalamap",
            "cache_control": "",
            "content": null,
            "content_base64": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "application/octet-stream",
            "etag": "bb38459f992ecb0e0b213fdb12c42b62",
            "force_destroy": false,
            "id": "map.scala",
            "key": "map.scala",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "server_side_encryption": "",
            "source": "./map.scala",
            "storage_class": "STANDARD",
            "tags": {},
            "version_id": "",
            "website_redirect": ""
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_s3_bucket.scala_map"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_s3_bucket_object",
      "name": "file_upload_testdata",
      "provider": "provider.aws",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "acl": "private",
            "bucket": "testavrodatasource",
            "cache_control": "",
            "content": null,
            "content_base64": null,
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "binary/octet-stream",
            "etag": "c6d578273bcf30c51304a4c686cc8e75",
            "force_destroy": false,
            "id": "avroData.avro.snappy",
            "key": "avroData.avro.snappy",
            "kms_key_id": null,
            "metadata": {},
            "object_lock_legal_hold_status": "",
            "object_lock_mode": "",
            "object_lock_retain_until_date": "",
            "server_side_encryption": "",
            "source": "./../GenerateNewData/avroData.avro.snappy",
            "storage_class": "STANDARD",
            "tags": {},
            "version_id": "",
            "website_redirect": ""
          },
          "private": "bnVsbA==",
          "depends_on": [
            "aws_s3_bucket.test_avro_data_source"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "scala_code",
      "provider": "provider.local",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "import com.amazonaws.services.glue.ChoiceOption\nimport com.amazonaws.services.glue.GlueContext\nimport com.amazonaws.services.glue.ResolveSpec\nimport com.amazonaws.services.glue.errors.CallSite\nimport com.amazonaws.services.glue.util.GlueArgParser\nimport com.amazonaws.services.glue.util.Job\nimport com.amazonaws.services.glue.util.JsonOptions\nimport org.apache.spark.SparkContext\nimport scala.collection.JavaConverters._\n\nobject GlueApp {\n  def main(sysArgs: Array[String]) {\n    val spark: SparkContext = new SparkContext()\n    val glueContext: GlueContext = new GlueContext(spark)\n    // @params: [JOB_NAME]\n    val args = GlueArgParser.getResolvedOptions(sysArgs, Seq(\"JOB_NAME\").toArray)\n    Job.init(args(\"JOB_NAME\"), glueContext, args.asJava)\n    // @type: DataSource\n    // @args: [database = \"glue_database\", table_name = \"mapped_table\", transformation_ctx = \"mappedsource\"]\n    // @return: mappedsource\n    // @inputs: []\n    val mappedsource = glueContext.getCatalogSource(database = \"glue_database\", tableName = \"mapped_table\", redshiftTmpDir = \"\", transformationContext = \"mappedsource\").getDynamicFrame()\n    // @type: DataSource\n    // @args: [database = \"glue_database\", table_name = \"testindex\", transformation_ctx = \"datasourceDynamo\"]\n    // @return: datasourceDynamo\n    // @inputs: []\n    val datasourceDynamo = glueContext.getCatalogSource(database = \"glue_database\", tableName = \"testindex\", redshiftTmpDir = \"\", transformationContext = \"datasourceDynamo\").getDynamicFrame()\n    // @type: Join\n    // @args: [frame1 = datasource0, frame2 = datasource1, keys2 = [\"id\", \"sum\"], keys1 = [\"id\", \"sum\"], transformation_ctx = \"joindynamoands3\"]\n    // @return: joindynamoands3\n    // @inputs: [frame1 = mappedsource, frame2 = datasourceDynamo]\n    val joindynamoands3 = mappedsource.join(keys1 = Seq(\"id\", \"sum\"), keys2 = Seq(\"id\", \"sum\"), frame2 = datasourceDynamo, transformationContext = \"joindynamoands3\")\n    // @type: ResolveChoice\n    // @args: [database = \"glue_database\", choice = \"MATCH_CATALOG\", table_name = \"merged_table\", transformation_ctx = \"resolvechoice\"]\n    // @return: resolvechoice\n    // @inputs: [frame = joindynamoands3]\n    val resolvechoice = joindynamoands3.resolveChoice(choiceOption = Some(ChoiceOption(\"MATCH_CATALOG\")), database = Some(\"glue_database\"), tableName = Some(\"merged_table\"), transformationContext = \"resolvechoice\")\n    // @type: DataSink\n    // @args: [database = \"glue_database\", table_name = \"merged_table\", transformation_ctx = \"datasink\"]\n    // @return: datasink\n    // @inputs: [frame = resolvechoice]\n    val datasink = glueContext.getCatalogSink(database = \"glue_database\", tableName = \"merged_table\", redshiftTmpDir = \"\", transformationContext = \"datasink\").writeDynamicFrame(resolvechoice)\n    Job.commit()\n  }\n}",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./scalaCode_gen.scala",
            "id": "65d4f507e35adea198e9e5b7dbe576578eceec33",
            "sensitive_content": null
          },
          "private": "bnVsbA==",
          "depends_on": [
            "data.aws_glue_script.scala_script"
          ]
        }
      ]
    }
  ]
}
